# Generated by Django 5.2.6 on 2025-09-29 20:02

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Role',
            fields=[
                ('role_name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('customers', models.IntegerField(choices=[(0, 'No access'), (1, 'View only'), (0, 'Create an modify')], default=0)),
                ('suppliers', models.IntegerField(choices=[(0, 'No access'), (1, 'View only'), (0, 'Create an modify')], default=0)),
                ('materials', models.IntegerField(choices=[(0, 'No access'), (1, 'View only'), (0, 'Create an modify')], default=0)),
                ('purchases', models.IntegerField(choices=[(0, 'No access'), (1, 'View only'), (0, 'Create an modify')], default=0)),
                ('sales', models.IntegerField(choices=[(0, 'No access'), (1, 'View only'), (0, 'Create an modify')], default=0)),
                ('inventory', models.IntegerField(choices=[(0, 'No access'), (1, 'View only'), (0, 'Create an modify')], default=0)),
                ('accounting', models.IntegerField(choices=[(0, 'No access'), (1, 'View only'), (0, 'Create an modify')], default=0)),
                ('reporting', models.IntegerField(choices=[(0, 'No access'), (1, 'View only'), (0, 'Create an modify')], default=0)),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.role')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Role',
                'verbose_name_plural': 'User Roles',
                'db_table': 'user_roles',
                'unique_together': {('user_id', 'role')},
            },
        ),
    ]
